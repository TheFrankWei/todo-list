{"version":3,"sources":["features/table/tableSlice.js","features/button/button.js","features/table/TableRow.jsx","features/table/Table.jsx","features/user/userSlice.js","App.jsx","features/login/Login.jsx","features/routing/ProtectedRoute.js","AppRouter.jsx","app/store.js","serviceWorker.js","index.js"],"names":["tableSlice","createSlice","name","initialState","taskList","filteredList","reducers","getTaskList","state","data","JSON","parse","localStorage","getItem","createTask","payload","unshift","updateTask","index","findIndex","item","id","task","setItem","stringify","deleteTask","newTaskList","filter","filterTaskList","includes","toLowerCase","setTaskList","actions","Button","props","StyledButton","css","color","hoverColor","type","onMouseEnter","onMouseLeave","disabled","onClick","children","StyledRow","StyledForm","StyledInput","StyledTask","ButtonContainer","IconButton","StyledEdit","Edit","StyledTrash","Trash","Circle","TableRow","useState","toggleEdit","setEdit","taskInput","setTask","dispatch","useDispatch","inputRef","useRef","useEffect","current","focus","onDragStart","onDragEnter","draggable","ref","value","onChange","e","target","isDisabled","autocomplete","preventDefault","length","StyledTable","SearchContainer","SearchBox","StyledSearch","Search","StyledNew","TableRowContainer","Table","search","setSearch","hovered","setHovered","useSelector","table","dragItem","dropItem","placeholder","Date","now","map","position","taskListCopy","dragItemContent","splice","handleDragEnter","onDragOver","user","auth","status","httpErr","fetchAsync","createAsyncThunk","a","getState","rejectWithValue","fulfillWithValue","fetch","method","headers","body","URLSearchParams","email","password","mode","response","ok","json","message","userSlice","getUser","isAuth","hasOwnProperty","console","log","clearUser","removeItem","setAuth","extraReducers","builder","addCase","pending","fulfilled","rejected","Bounce","keyframes","AppContainer","Title","StyledLogout","App","LoginContainer","Label","Error","InputContainer","StyledUser","User","StyledLock","LockAlt","StyledLogin","Login","history","useHistory","isPending","username","setUsername","usernameValidity","setUsernameValidity","setPassword","passwordValidity","setPasswordValidity","checkValidity","test","String","onSubmit","push","onBlur","required","pattern","title","ProtectedRoute","Component","component","rest","render","to","pathname","from","location","AppRouter","isAuthenticated","path","store","configureStore","reducer","userReducer","tableReducer","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iRAQaA,EAAaC,YAAY,CACpCC,KAAM,QACNC,aAPmB,CACbC,SAAS,GACTC,aAAa,IAMnBC,SAAU,CACRC,YAAY,SAACC,GACT,IAAMC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,aAC7CL,EAAMJ,SAAWK,GAAQ,IAE7BK,WAAY,SAACN,EAAD,GAAuB,IAAdO,EAAa,EAAbA,QAKnBP,EAAMJ,SAASY,QAAQD,IAEzBE,WAAY,SAACT,EAAD,GAAuB,IAAdO,EAAa,EAAbA,QACbG,EAAQV,EAAMJ,SAASe,WAAU,SAACC,GAAD,OACnCA,EAAKC,KAAON,EAAQM,MAExBb,EAAMJ,SAASc,GAAOI,KAAOP,EAAQO,KACrCV,aAAaW,QAAQ,WAAYb,KAAKc,UAAUhB,EAAMJ,YAExDqB,WAAY,SAACjB,EAAD,GAAuB,IAAdO,EAAa,EAAbA,QACbW,EAAclB,EAAMJ,SAASuB,QAAQ,SAAAP,GAAI,OAAIA,EAAKC,KAAON,KAC/DH,aAAaW,QAAQ,WAAYb,KAAKc,UAAUE,IAChDlB,EAAMJ,SAAWsB,GAEnBE,eAAe,SAAEpB,EAAF,GAAuB,IAAbO,EAAY,EAAZA,QACjBV,EAAeG,EAAMJ,SAASuB,QAAQ,SAAAP,GAAI,OAAIA,EAAKE,KAAKO,SAASd,EAAQe,kBAC/EtB,EAAMH,aAAeA,GAEvB0B,YAAY,SAAEvB,EAAF,GAAuB,IAAbO,EAAY,EAAZA,QACpBH,aAAaW,QAAQ,WAAYb,KAAKc,UAAUT,IAChDP,EAAMJ,SAAWW,MAKhB,EAAyFf,EAAWgC,QAA5FzB,EAAR,EAAQA,YAAaO,EAArB,EAAqBA,WAAYG,EAAjC,EAAiCA,WAAYQ,EAA7C,EAA6CA,WAAYG,EAAzD,EAAyDA,eAAgBG,EAAzE,EAAyEA,YAEjE/B,IAAf,Q,sBCNeiC,EAtCA,SAACC,GAChB,IAmBQC,EAAY,4CAnBE,SAAAD,GAAK,OACzBE,YADyB,oBAEHF,EAAMG,MAFH,iJAcVH,EAAMI,WAAY,QAAUJ,EAAMG,MAdxB,iBAeHH,EAAMI,WAAYJ,EAAMI,WAAa,eAflC,qBAgBCJ,EAAMI,WAAYJ,EAAMI,WAAa,cAhBtC,WAmBP,KAIlB,OACE,cAACH,EAAD,CACIE,MAAOH,EAAMG,MACbC,WAAYJ,EAAMI,WAClBC,KAAML,EAAMK,KACZC,aAAcN,EAAMM,aACpBC,aAAcP,EAAMO,aACpBC,SAAUR,EAAMQ,SAChBC,QAAST,EAAMS,QAPnB,SAQKT,EAAMU,YCvBf,IAAMC,EAAS,0HAMTC,EAAU,8EAIVC,EAAW,gFAIXC,EAAU,qIAMVC,EAAe,qHAMfC,EAAU,4GAKVC,EAAY,YAAOC,IAAP,qBAAF,2EAOVC,EAAc,YAAOC,IAAP,qBAAH,4EAQXC,EAAM,+NA0EGC,EA7DE,SAACtB,GAEd,MAAmBA,EAAMd,KAAlBC,EAAP,EAAOA,GAAIC,EAAX,EAAWA,KAEX,EAA8BmC,mBAAkB,KAATnC,GAAvC,mBAAOoC,EAAP,KAAmBC,EAAnB,KACA,EAA6BF,mBAASnC,GAAtC,mBAAOsC,EAAP,KAAkBC,EAAlB,KACMC,EAAWC,cAEXC,EAAWC,iBAAO,MAExBC,qBAAU,WACHR,GACCM,EAASG,QAAQC,UAEvB,CAACV,IAaH,OACI,eAACb,EAAD,CAAWwB,YAAanC,EAAMmC,YAAaC,YAAapC,EAAMoC,YAAaC,UAAWrC,EAAMqC,UAA5F,UACI,cAAChB,EAAD,IAEA,eAACT,EAAD,WACI,cAACE,EAAD,UACCU,EACO,cAACX,EAAD,CACIyB,IAAKR,EACLzB,KAAK,OACLrC,KAAK,OACLuE,MAAOb,EACPc,SAAU,SAAAC,GAAC,OAAId,EAAQc,EAAEC,OAAOH,QAChC/B,SAAUR,EAAM2C,WAChBC,aAAa,QAErBlB,IAGJ,cAACX,EAAD,UACKS,EAAa,cAAC,EAAD,CAAcrB,MAAM,UAAUC,WAAW,UAAUK,QA/B9D,SAACgC,GAChBA,EAAEI,iBACFjB,EAAS7C,EAAW,CAAE,GAAKI,EAAI,KAAQuC,KACvCD,GAAQ,IA4B0FjB,SAAWkB,EAAUoB,OAAO,GAAKpB,EAAUoB,OAAO,GAA1H,kBAEN,iCACI,cAAC9B,EAAD,CAAYP,QAAS,kBAAIgB,GAASD,IAAlC,SAAgD,cAACP,EAAD,MAChD,cAACD,EAAD,CAAYP,QA7BnB,SAACgC,GAClBA,EAAEI,iBACFjB,EAASrC,EAAWJ,KA2BI,SAAoC,cAACgC,EAAD,kB,QC9GpE,I,EAAM4B,EAAW,0fAkBXC,EAAe,6HAMfC,EAAS,wOAUTC,EAAe,YAAOC,IAAP,qBAAH,wGAOZtC,EAAW,4HAOXuC,EAAS,wGAKTC,EAAiB,iiBAwHRC,EA3FD,WAGV,MAA4B/B,mBAAS,IAArC,mBAAOgC,EAAP,KAAeC,EAAf,KACA,EAA8BjC,oBAAS,GAAvC,mBAAOkC,EAAP,KAAgBC,EAAhB,KACM9B,EAAWC,cACX3D,EAAWyF,aAAY,SAACrF,GAAD,OAAWA,EAAMsF,MAAM1F,YAC9CC,EAAewF,aAAY,SAACrF,GAAD,OAAUA,EAAMsF,MAAMzF,gBAEjD0F,EAAW9B,mBACX+B,EAAW/B,mBAEjBC,qBAAU,WACNJ,EAASvD,OACX,IA4CF,OACI,eAAC0E,EAAD,WACQ,eAACC,EAAD,WACI,eAACC,EAAD,WACI,cAACC,EAAD,IAAgB,cAAC,EAAD,CAAa7C,KAAK,OAAO0D,YAAa,YAAYxB,MAAOgB,EAAQf,SArChF,SAACC,GAClBe,EAAUf,EAAEC,OAAOH,OAChBgB,EAAOT,OAAO,GACblB,EAASlC,EAAe+C,EAAEC,OAAOH,cAoCzB,cAACa,EAAD,UACI,cAAC,EAAD,CAAcjD,MAAM,UAAUM,QAAS,kBAhDvD+C,EAAU,IACVE,GAAW,QACX9B,EAAShD,EAAW,CACR,GAAMoF,KAAKC,MACX,KAAO,OA4CqDzD,SAAUtC,EAAS,IAA2B,KAArBA,EAAS,GAAGkB,KAAakB,aAf9G,WACZoD,GAAW,IAcsInD,aAXnI,WACdmD,GAAW,IAUK,sBAIR,eAACL,EAAD,WACCI,GAAW,cAAC,EAAD,CAAuBvE,KAAM,CAAC,IAAM,EAAE,KAAO,IAAKyD,YAAU,GAA7C,QAC1BY,EAAOT,OAAQ,EAAI3E,EAAa+F,KAAI,SAAChF,GAAD,OACjC,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKC,OACjBjB,EAAUA,EAASgG,KAAI,SAAChF,EAAMF,GAAP,OAC1B,cAAC,EAAD,CACImD,YAAa,SAACM,GAAD,OA3CL0B,EA2C4BnF,OA1CpD6E,EAAS5B,QAAUkC,GADC,IAAIA,GA4CR/B,YAAa,SAACK,GAAD,OAxCT,SAACA,EAAG0B,GACxBL,EAAS7B,QAAUkC,EAEnB,IAAMC,EAAY,YAAOlG,GACnBmG,EAAkBD,EAAaP,EAAS5B,SAC9CmC,EAAaE,OAAOT,EAAS5B,QAAQ,GACrCmC,EAAaE,OAAOR,EAAS7B,QAAQ,EAAGoC,GAExCR,EAAS5B,QAAU6B,EAAS7B,QAC5B6B,EAAS7B,QAAQ,KAEjBL,EAAS/B,EAAYuE,IA6BaG,CAAgB9B,EAAEzD,IACpCwF,WAAY,SAAC/B,GAAD,OAAKA,EAAEI,kBACnBR,UAAWnE,EAAS,IAA2B,KAArBA,EAAS,GAAGkB,KAEtCF,KAAMA,GADDA,EAAKC,OAEb,Y,yBC/KflB,EAAe,CACbwG,KAAM,GACNC,MAAM,EACNC,OAAQ,OACRC,QAAS,MAGJC,EAAaC,YACtB,oBADsC,uCAEtC,WAAOjG,EAAP,wBAAAkG,EAAA,+DAAiBnD,SAAjB,EAA2BoD,SAAUC,EAArC,EAAqCA,gBAAiBC,EAAtD,EAAsDA,iBAAtD,2EAO2BC,MAP3B,yDAOsC,CAC9BC,OAAO,OACPC,QAAQ,CACJ,eAAe,oDAEnBC,KAAM,IAAIC,gBAAgB,CACtB,MAAS1G,EAAQ2G,MACjB,SAAY3G,EAAQ4G,WAExBC,KAAM,SAhBd,WAOUC,EAPV,QAkBkBC,GAlBlB,yCAmBeX,EAAgBU,EAAShB,SAnBxC,wBAqBsBgB,EAASE,OArB/B,eAqBUtH,EArBV,yBAsBW2G,EAAiB3G,IAtB5B,wCAyBU0G,EAAgB,KAAIa,SAzB9B,0DAFsC,yDAgC7BC,GAAYhI,YAAY,CACnCC,KAAM,OACNC,eACAG,SAAU,CACR4H,QAAQ,SAAC1H,EAAD,GAA4B,IAAD,IAAlBO,eAAkB,MAAR,GAAQ,EACzBoH,EAASpH,EAAQqH,eAAe,cACtCC,QAAQC,IAAIvH,GACToH,GACCvH,aAAaW,QAAQ,UAAU,GAEnCf,EAAMoG,KAAOuB,EACb3H,EAAMmG,KAAO5F,GAEjBwH,UAAU,SAAC/H,GAEP,OADAI,aAAa4H,WAAW,UACjBrI,GAEXsI,QAAQ,SAACjI,EAAD,GAAsB,IAAbO,EAAY,EAAZA,QACbH,aAAaW,QAAQ,SAAUR,GAC/BP,EAAMoG,KAAO7F,IAGnB2H,cAAe,SAACC,GACdA,EACGC,QAAQ7B,EAAW8B,SAAS,SAACrI,GAC5BA,EAAMqG,OAAS,aAEhB+B,QAAQ7B,EAAW+B,WAAW,SAACtI,EAAD,GAAuB,IAAdO,EAAa,EAAbA,QACtCsH,QAAQC,IAAIvH,GACZP,EAAMqG,OAAS,OACf,IAAMsB,EAASpH,EAAQqH,eAAe,cACnCD,GACCvH,aAAaW,QAAQ,UAAU,GAEnCf,EAAMoG,KAAOuB,EACb3H,EAAMmG,KAAO5F,KAEd6H,QAAQ7B,EAAWgC,UAAU,SAACvI,EAAD,GAAuB,IAAdO,EAAa,EAAbA,QACrCP,EAAMqG,OAAS,OACfrG,EAAMsG,QAAU/F,QAMjB,GAAwCkH,GAAUjG,QAAjCuG,IAAjB,GAAQL,QAAR,GAAiBK,WAAWE,GAA5B,GAA4BA,QAEpBR,MAAf,Q,MC5EA,IAAMe,GAASC,YAAH,4IAQNC,GAAY,mGAKZC,GAAK,gGAGIH,GAHJ,kCAMLI,GAAY,6HAmCHC,GA5BH,WACV,IAAMvF,EAAWC,cAOjB,OACE,eAACmF,GAAD,WAEE,cAACE,GAAD,UACE,cAAC,EAAD,CAAc/G,MAAM,UAAUM,QATf,SAACgC,GACpBA,EAAEI,iBACFjB,EAASyE,OAOL,sBAGF,8BACE,cAACY,GAAD,8BAGF,8BACE,cAAC,EAAD,U,kBC3CR,IAAMG,GAAc,kIAMdH,GAAK,8GAKLI,GAAK,sGAKLC,GAAM,qKASNC,GAAc,0TAgBZD,GAhBY,yGAyBdzG,GAAW,0JAQX2G,GAAa,YAAOC,KAAP,qBAAH,qDAIVC,GAAa,YAAOC,KAAP,qBAAH,qDAKVC,GAAW,4FA+EFC,GA1ED,WACZ,IAAMjG,EAAWC,cACXiG,EAAUC,cAEVC,EAAYrE,aAAY,SAACrF,GAAD,OAAWA,EAAMmG,KAAKE,UAE9CC,GADkBjB,aAAY,SAACrF,GAAD,OAAWA,EAAMmG,KAAKC,QAC1Cf,aAAY,SAACrF,GAAD,OAAWA,EAAMmG,KAAKG,YAClD,EAAgCrD,mBAAS,IAAzC,mBAAO0G,EAAP,KAAiBC,EAAjB,KACA,EAAgD3G,qBAAhD,mBAAO4G,EAAP,KAAyBC,EAAzB,KACA,EAAgC7G,mBAAS,IAAzC,mBAAOkE,EAAP,KAAiB4C,EAAjB,KACA,EAAgD9G,qBAAhD,mBAAO+G,EAAP,KAAyBC,EAAzB,KAEAvG,qBAAU,WACR,IAAIiE,EAASvH,aAAaC,QAAQ,UAC/BsH,GACCrE,EAAS2E,GAAQN,MAEnB,IAEJ,IAWMuC,EAAgB,SAACnI,GACrB,OAAOA,GACL,IAAK,WAEH4H,IADW,wJACKQ,KAAKC,OAAOT,GAAUrI,eAAgBwI,GAAoB,GAAQA,GAAoB,GACtG,MACF,IAAK,WACF3C,IAAaA,EAAS3C,OAAO,GAAK2C,EAAS3C,OAAO,IAAMyF,GAAoB,GAAQA,GAAoB,KAO/G,OACE,eAACnB,GAAD,WAEE,cAAC,GAAD,yBACA,uBAAMuB,SA7BU,SAAClG,GACjBA,EAAEI,iBAMAnE,aAAaW,QAAQ,UAAU,GAC/ByI,EAAQc,KAAK,eAqBf,UAEA,cAACvB,GAAD,oBACE,eAACE,GAAD,WACI,cAACC,GAAD,IACA,cAAC,GAAD,CAAanH,KAAK,QAAQ0D,YAAY,4BAA4BxB,MAAO0F,EAAUzF,SAAU,SAAAC,GAAC,OAAIyF,EAAYzF,EAAEC,OAAOH,QAAQsG,OAAQ,SAACpG,GAAD,OAAK+F,EAAc,aAAYM,UAAQ,EAACC,QAAQ,eAGzL,cAACzB,GAAD,WAA6B,IAArBa,EAA4B,oBAAsB,OAE5D,cAACd,GAAD,uBACA,eAACE,GAAD,WACA,cAACG,GAAD,IACA,cAAC,GAAD,CAAa3D,YAAY,gCAAgCxB,MAAOkD,EAAUjD,SAAU,SAAAC,GAAC,OAAI4F,EAAY5F,EAAEC,OAAOH,QAAQsG,OAAQ,SAACpG,GAAD,OAAK+F,EAAc,aAAaM,UAAQ,EAACC,QAAQ,UAAWC,MAAM,yCAEhM,cAAC1B,GAAD,WAA6B,IAArBgB,EAA4B,mCAAqC,OACzE,cAACV,GAAD,UACE,cAAC,EAAD,CAAczH,MAAM,UAAUE,KAAK,SAASG,UAAY8H,IAAqBH,GAAmC,YAAdH,EAAlG,SAAwI,YAAZA,EAAuB,MAAQ,YAE7J,cAACV,GAAD,UAAQ1C,EAAQ,SAAD,OAAWA,GAAY,c,4CC7I/BqE,OAVf,YAAkE,IAAxChD,EAAuC,EAAvCA,OAAmBiD,EAAoB,EAA/BC,UAAyBC,EAAM,mBAC7D,OAAO,cAAC,IAAD,6BAAWA,GAAX,IAAiBC,OAAQ,SAACrJ,GACrB,OAAGiG,EACQ,cAACiD,EAAD,IAEA,cAAC,IAAD,CAAUI,GAAI,CAACC,SAAU,mBAAoBjL,MAAM,CAACkL,KAAMxJ,EAAMyJ,kBCc5EC,GAdG,WAChB,IAAMC,EAAkBhG,aAAY,SAACrF,GAAD,OAAWA,EAAMmG,KAAKC,QAExD,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOkF,KAAK,mBAAZ,SAA+B,cAAC,GAAD,MAC/B,cAAC,GAAD,CAAgBA,KAAK,aAAaT,UAAWhC,GAAKlB,OAAQ0D,IAEzDA,EAAkB,cAAC,IAAD,CAAUL,GAAG,eAAkB,cAAC,IAAD,CAAUA,GAAG,yBCb9DO,GAAQC,YAAe,CAClCC,QAAS,CACPtF,KAAMuF,GACNpG,MAAOqG,KCMSC,QACW,cAA7BC,OAAOV,SAASW,UAEe,UAA7BD,OAAOV,SAASW,UAEhBD,OAAOV,SAASW,SAASC,MACvB,2DCVNC,IAASjB,OACP,cAAC,IAAMkB,WAAP,UACE,cAAC,IAAD,CAAUV,MAAOA,GAAjB,SACI,cAAC,GAAD,QAGNW,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAClCA,EAAaC,kB","file":"static/js/main.a473f89d.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\nconst initialState = {\r\n        taskList:[],\r\n        filteredList:[],\r\n    };\r\n\r\nexport const tableSlice = createSlice({\r\n  name: 'table',\r\n  initialState,\r\n  reducers: {\r\n    getTaskList:(state) => {\r\n        const data = JSON.parse(localStorage.getItem('taskList'));\r\n        state.taskList = data || [];\r\n    },\r\n    createTask: (state, {payload}) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.taskList.unshift(payload);\r\n    },\r\n    updateTask: (state, {payload}) => {\r\n      const index = state.taskList.findIndex((item) => \r\n          item.id === payload.id\r\n      )\r\n      state.taskList[index].task = payload.task;\r\n      localStorage.setItem('taskList',(JSON.stringify(state.taskList)));\r\n    },\r\n    deleteTask: (state, {payload}) => {\r\n      const newTaskList = state.taskList.filter( item => item.id !== payload)\r\n      localStorage.setItem('taskList',(JSON.stringify(newTaskList)));\r\n      state.taskList = newTaskList;\r\n    },\r\n    filterTaskList:( state, {payload}) =>{\r\n      const filteredList = state.taskList.filter( item => item.task.includes(payload.toLowerCase()))\r\n      state.filteredList = filteredList;\r\n    },\r\n    setTaskList:( state, {payload}) =>{\r\n      localStorage.setItem('taskList',(JSON.stringify(payload)));\r\n      state.taskList = payload; \r\n    },\r\n  },\r\n});\r\n\r\nexport const { getTaskList, createTask, updateTask, deleteTask, filterTaskList, setTaskList } = tableSlice.actions;\r\n\r\nexport default tableSlice.reducer;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled'\r\nimport { css } from '@emotion/react'\r\n\r\nconst Button = (props) => {\r\nconst dynamicButton = props =>\r\n  css`\r\n    background-color: ${props.color};\r\n    color: white;\r\n    min-width: 2.5rem;\r\n    border: solid 2px transparent;\r\n    border-radius: 0.4em; \r\n    width: 100%;\r\n\r\n    :disabled{\r\n        opacity: 0.5;\r\n      }\r\n\r\n    &:hover:not(:disabled) {\r\n        color: ${props.hoverColor? 'white' : props.color};\r\n        border-color: ${props.hoverColor? props.hoverColor : 'currentColor'};\r\n        background-color: ${props.hoverColor? props.hoverColor : 'transparent'};\r\n      }\r\n  `\r\n  const StyledButton = styled.button`\r\n    ${dynamicButton};\r\n`;\r\n\r\n  return(\r\n    <StyledButton\r\n        color={props.color}\r\n        hoverColor={props.hoverColor}\r\n        type={props.type} \r\n        onMouseEnter={props.onMouseEnter} \r\n        onMouseLeave={props.onMouseLeave} \r\n        disabled={props.disabled} \r\n        onClick={props.onClick}>\r\n        {props.children}\r\n    </StyledButton>\r\n  )\r\n}\r\n\r\nexport default Button;\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { Edit } from '@emotion-icons/entypo/Edit';\r\nimport { Trash } from '@emotion-icons/entypo/Trash'\r\n\r\nimport {\r\n    updateTask,\r\n    deleteTask,\r\n  } from './tableSlice';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\nimport StyledButton from '../button/button';\r\n\r\nconst StyledRow = styled.div`\r\n    border-top: 1px solid black;\r\n    padding: 1rem 0rem 1rem 3.5rem;\r\n    \r\n`\r\n\r\nconst StyledForm = styled.form`\r\n    display: flex;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n  width: 24rem;\r\n`\r\n\r\nconst StyledTask = styled.div`\r\n    display: inline-flex;\r\n    margin-left: 0.5rem;\r\n    overflow: hidden;\r\n    flex-grow: 2;\r\n`\r\nconst ButtonContainer = styled.div`\r\n    display: inline-flex;\r\n    float: right;\r\n    margin-right: 0.8rem;\r\n`\r\n\r\nconst IconButton = styled.button`\r\n    background-color: transparent;\r\n    border: none;\r\n`\r\n\r\nconst StyledEdit= styled(Edit)`\r\n    width: 1em;\r\n    display: inline;\r\n    &:hover {\r\n        color: #2E8B57;\r\n    }\r\n`\r\nconst StyledTrash = styled(Trash)`\r\n    width: 1em;\r\n    display: inline;\r\n    &:hover {\r\n        color: #B22222;\r\n    }\r\n`\r\n\r\nconst Circle = styled.span`\r\n    position: relative;\r\n    background-color: white;\r\n    border: 1px #0366d6 solid; \r\n    border-radius: 50%;\r\n    height: 1rem;\r\n    width: 1rem;\r\n    float: left;\r\n    margin-top: 0.2rem;\r\n    margin-left: -2.5rem;\r\n\r\n`\r\n\r\nconst TableRow = (props) => {\r\n\r\n    const{ id, task} = props.item;\r\n\r\n    const [toggleEdit, setEdit] = useState(task === '');\r\n    const [taskInput, setTask] = useState(task);\r\n    const dispatch = useDispatch();\r\n\r\n    const inputRef = useRef(null);\r\n\r\n    useEffect(()=>{\r\n        if(toggleEdit){\r\n            inputRef.current.focus();\r\n        }\r\n    },[toggleEdit])\r\n\r\n    const handleEdit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateTask({ 'id':id, 'task': taskInput,}))\r\n        setEdit(false);\r\n    }\r\n\r\n    const handleDelete = (e) => {\r\n        e.preventDefault();\r\n        dispatch(deleteTask(id));\r\n    }\r\n\r\n    return(\r\n        <StyledRow onDragStart={props.onDragStart} onDragEnter={props.onDragEnter} draggable={props.draggable}>\r\n            <Circle/>\r\n            \r\n            <StyledForm>\r\n                <StyledTask>\r\n                {toggleEdit?(\r\n                        <StyledInput \r\n                            ref={inputRef}\r\n                            type=\"text\"\r\n                            name=\"task\"\r\n                            value={taskInput}\r\n                            onChange={e => setTask(e.target.value)}\r\n                            disabled={props.isDisabled}\r\n                            autocomplete=\"off\"\r\n                            />\r\n                ):( taskInput )}\r\n                </StyledTask>\r\n\r\n                <ButtonContainer>\r\n                    {toggleEdit? (<StyledButton color='#000000' hoverColor='#2E8B57' onClick={handleEdit} disabled={(taskInput.length<1 || taskInput.length>25)}>Save</StyledButton>\r\n                        ):(\r\n                            <span>\r\n                                <IconButton onClick={()=>setEdit(!toggleEdit)} ><StyledEdit/></IconButton>\r\n                                <IconButton onClick={handleDelete} ><StyledTrash/></IconButton>\r\n                            </span>\r\n                        )}\r\n                </ButtonContainer>\r\n          </StyledForm>\r\n        </StyledRow>\r\n    )\r\n\r\n}\r\n\r\nexport default TableRow;","import React, { useRef, useState, useEffect } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport TableRow from './TableRow';\r\nimport { Search } from '@emotion-icons/bootstrap/Search';\r\nimport {\r\n    getTaskList,\r\n    createTask,\r\n    filterTaskList,\r\n    setTaskList,\r\n  } from './tableSlice';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport StyledButton from '../button/button';\r\n\r\nconst StyledTable = styled.div`\r\n    box-shadow: rgba(3, 102, 214, 0.3) 0px 0px 0px 3px;\r\n    min-width: 32rem;\r\n    min-height: 9.1rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 1rem;\r\n    padding: 1.4rem 0rem 0rem 0rem;\r\n    border: 1px solid black;\r\n\r\n    background: linear-gradient(to right, \r\n        transparent 0%, \r\n        transparent calc(15% - 0.81px), \r\n        #FFB6C1 calc(15% - 0.8px), \r\n        #FFB6C1 calc(15% + 0.8px), \r\n        transparent calc(15% + 0.81px), \r\n        transparent 100%); \r\n`\r\nconst SearchContainer = styled.div`\r\n    display: inline-flex;\r\n    flex-direction: row;\r\n    padding-bottom: 1rem;\r\n    \r\n`\r\nconst SearchBox = styled.div`\r\n    display: inline-flex;\r\n    border: 0.05rem solid black;\r\n    border-radius: 1rem;\r\n    margin: 0rem 0rem 0rem 1rem;\r\n    overflow:hidden;\r\n    :focus-within{\r\n        border: 2px dashed rgba(3, 102, 214, 0.3);\r\n      }\r\n`\r\nconst StyledSearch = styled(Search)`\r\n    color: gray;\r\n    width: 0.6rem;\r\n    display: inline;\r\n    margin-left: 0.2rem;\r\n    margin-right: 0.2rem;\r\n`\r\nconst StyledInput = styled.input`\r\n    border: none;\r\n    outline: none;\r\n    width: 16rem;\r\n    line-height: 0.8rem;\r\n`\r\n\r\nconst StyledNew = styled.span`\r\n    margin-left: 10.5rem;\r\n    min-width: 2.5rem;\r\n`\r\n\r\nconst TableRowContainer = styled.div`\r\n    :empty{\r\n        border-top: 1px solid black;\r\n    }\r\n    >:nth-of-type(odd){\r\n        background: linear-gradient(to right, \r\n            #F0F8FF 0%, \r\n            #F0F8FF calc(15% - 0.81px), \r\n            #FFB6C1 calc(15% - 0.8px), \r\n            #FFB6C1 calc(15% + 0.8px), \r\n            #F0F8FF calc(15% + 0.81px), \r\n            #F0F8FF 100%); \r\n    }\r\n    >: only-child{\r\n            border-bottom: 1px solid black;\r\n    }\r\n     > :not(:only-child):last-child{\r\n        background-clip: padding-box;\r\n        border-bottom-left-radius: 1rem;\r\n        border-bottom-right-radius: 1rem;\r\n    }\r\n`\r\n\r\n/*Data is in local storage as such:\r\n\r\ntaskList:[{'task:'task_name','id':'Date.now()'},...]\r\n  -using Date.now upon creation for id as I figured it was unique enough for these purposes\r\n\r\n*/\r\nconst Table = () => {\r\n\r\n    \r\n    const [search, setSearch] = useState('');\r\n    const [hovered, setHovered] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const taskList = useSelector((state) => state.table.taskList);\r\n    const filteredList = useSelector((state)=> state.table.filteredList);\r\n\r\n    const dragItem = useRef();\r\n    const dropItem = useRef();\r\n\r\n    useEffect(()=>{\r\n        dispatch(getTaskList())\r\n    },[])\r\n\r\n    const createRow = () => {\r\n        setSearch('');\r\n        setHovered(false);\r\n        dispatch(createTask({\r\n                    'id': Date.now(),\r\n                    'task':'', \r\n                    }))\r\n        }\r\n\r\n    const handleSearch = (e) => {\r\n        setSearch(e.target.value);\r\n        if(search.length>0){\r\n            dispatch(filterTaskList(e.target.value));\r\n        }\r\n    }\r\n\r\n    const handleDragStart = (e, position) =>{\r\n        dragItem.current = position;\r\n    }\r\n\r\n    const handleDragEnter = (e, position) =>{\r\n        dropItem.current = position;\r\n\r\n        const taskListCopy = [...taskList];\r\n        const dragItemContent = taskListCopy[dragItem.current];\r\n        taskListCopy.splice(dragItem.current,1);\r\n        taskListCopy.splice(dropItem.current,0, dragItemContent);\r\n\r\n        dragItem.current = dropItem.current;\r\n        dropItem.current=null;\r\n\r\n        dispatch(setTaskList(taskListCopy));\r\n    }\r\n\r\n    const onHover = () => {\r\n        setHovered(true);\r\n      };\r\n    \r\n      const onLeave = () => {\r\n        setHovered(false);\r\n      };\r\n\r\n    return(\r\n        <StyledTable>\r\n                <SearchContainer>\r\n                    <SearchBox>\r\n                        <StyledSearch /><StyledInput type=\"text\" placeholder =\"Search...\" value={search} onChange={handleSearch}/>\r\n                    </SearchBox>\r\n                    <StyledNew>\r\n                        <StyledButton color='#191970' onClick={()=>createRow()} disabled={taskList[0] && taskList[0].task === ''} onMouseEnter={onHover} onMouseLeave={onLeave}>New</StyledButton>\r\n                    </StyledNew>\r\n                </SearchContainer>\r\n                \r\n                <TableRowContainer> \r\n                {hovered && <TableRow key={\"test\"} item={{'id':-1,'task':''}} isDisabled/>}\r\n                {search.length >0? (filteredList.map((item)=>(\r\n                    <TableRow key={item.id} item={item}/>\r\n                ))) : (taskList? taskList.map((item, index) =>(\r\n                    <TableRow \r\n                        onDragStart={(e)=>handleDragStart(e,index)}\r\n                        onDragEnter={(e)=>handleDragEnter(e,index)} \r\n                        onDragOver={(e)=>e.preventDefault()}\r\n                        draggable={taskList[0] && taskList[0].task !== ''}\r\n                        key={item.id} \r\n                        item={item}/>\r\n                )) : null)   \r\n                }\r\n                </TableRowContainer>\r\n            \r\n            \r\n        </StyledTable>\r\n    )\r\n\r\n}\r\n\r\nexport default Table;","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n        user: [],\r\n        auth: false,\r\n        status: 'idle',\r\n        httpErr: null,\r\n    };\r\n\r\nexport const fetchAsync = createAsyncThunk(\r\n    'counter/fetchUser',\r\n    async (payload, {dispatch, getState, rejectWithValue, fulfillWithValue}) => {\r\n        try{\r\n        // const response = await fetchUser(payload);\r\n        // The value we return becomes the `fulfilled` action payload\r\n        const URL = `http://dev.rapptrlabs.com/Tests/scripts/user-login.php`;\r\n    \r\n    \r\n        const response = await fetch(URL, {\r\n            method:'POST', \r\n            headers:{\r\n                'Content-Type':'application/x-www-form-urlencoded; charset=UTF-8',\r\n            },\r\n            body: new URLSearchParams({\r\n                'email': payload.email,\r\n                'password': payload.password,\r\n            }),\r\n            mode: 'cors',\r\n        })\r\n        if (!response.ok) {\r\n            return rejectWithValue(response.status)\r\n        }\r\n        const data= await response.json();\r\n        return fulfillWithValue(data)\r\n    }\r\n    catch(err){\r\n        throw rejectWithValue(err.message);\r\n        }\r\n    }\r\n    );\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    getUser:(state, {payload = {}}) => {\r\n        const isAuth = payload.hasOwnProperty('user_token');\r\n        console.log(payload)\r\n        if(isAuth){\r\n            localStorage.setItem('isAuth', true);\r\n        }\r\n        state.auth = isAuth;\r\n        state.user = payload;\r\n    },\r\n    clearUser:(state)=>{\r\n        localStorage.removeItem('isAuth')\r\n        return initialState;\r\n    },\r\n    setAuth:(state, {payload})=> {\r\n        localStorage.setItem('isAuth', payload);\r\n        state.auth = payload;\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchAsync.fulfilled, (state, {payload}) => {\r\n        console.log(payload)\r\n        state.status = 'idle';\r\n        const isAuth = payload.hasOwnProperty('user_token');\r\n        if(isAuth){\r\n            localStorage.setItem('isAuth', true);\r\n        }\r\n        state.auth = isAuth;\r\n        state.user = payload;\r\n      })\r\n      .addCase(fetchAsync.rejected, (state, {payload}) => {\r\n        state.status = 'idle';\r\n        state.httpErr = payload;\r\n      })\r\n      \r\n  },\r\n});\r\n\r\nexport const { getUser, clearUser, setAuth } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport  Table  from './features/table/Table';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  clearUser\r\n} from './features/user/userSlice';\r\nimport './App.css';\r\nimport { keyframes } from \"@emotion/react\"\r\n\r\nimport StyledButton from './features/button/button';\r\n\r\nconst Bounce = keyframes`\r\n    from {\r\n        transform: translateY(0px);\r\n    }\r\n    to {\r\n        transform: translateY(-18px);\r\n    }\r\n`\r\nconst AppContainer = styled.div`\r\n  display: grid;\r\n  justify-items: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  padding: 1rem 0rem 0.2rem 0rem;\r\n  font-size: 2rem;  \r\n  animation: ${Bounce} 4s linear infinite alternate}    \r\n`;\r\n\r\nconst StyledLogout = styled.div`\r\n  position: fixed;\r\n  right: 0px;\r\n  top 0px;\r\n  margin: 0.5rem 0.5rem 0.5rem 0.5rem;\r\n`;\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = (e) => {\r\n    e.preventDefault();\r\n    dispatch(clearUser());\r\n  }\r\n\r\n  return(\r\n    <AppContainer>\r\n\r\n      <StyledLogout>\r\n        <StyledButton color=\"#778899\" onClick={handleLogout}>Logout</StyledButton>\r\n      </StyledLogout>\r\n\r\n      <div>\r\n        <Title>My To-Do List</Title>\r\n      </div>\r\n\r\n      <div>\r\n        <Table/>\r\n      </div>\r\n\r\n    </AppContainer>\r\n  )\r\n}\r\n\r\n\r\nexport default App;\r\n","import React, {useEffect, useState,} from 'react';\r\nimport styled from '@emotion/styled';\r\nimport {User} from '@emotion-icons/boxicons-solid/User';\r\nimport {LockAlt} from '@emotion-icons/boxicons-solid/LockAlt';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    getUser,\r\n    fetchAsync,\r\n    setAuth\r\n  } from '../user/userSlice';\r\n\r\nimport StyledButton from '../button/button';\r\n\r\nconst LoginContainer = styled.div`\r\n  display: grid;\r\n  justify-content: center;\r\n  align-content: space-between;\r\n`\r\n\r\nconst Title = styled.h1`\r\n  padding: 1rem 0rem 0.2rem 0rem;\r\n  font-size: 2.5em;      \r\n`;\r\n\r\nconst Label = styled.label`\r\n  font-size: 0.8rem; \r\n  margin-left: 1rem;\r\n`;\r\n\r\nconst Error= styled.div`\r\n    display: block;\r\n    color: #B22222;\r\n    font-size: 0.8rem;\r\n    margin-bottom: 1.5rem;\r\n    min-height: 1rem;\r\n    text-align: center;\r\n`\r\n\r\nconst InputContainer = styled.div`\r\n    border: 2px solid black;\r\n    display: flex;\r\n    width:100%;\r\n    box-sizing: border-box;\r\n    margin-bottom: 0.5rem;\r\n    border-radius: 0.4em;  \r\n    overflow: hidden;\r\n    &:hover {\r\n      border-style: dashed;\r\n    }\r\n    :focus-within{\r\n      border: 2px dashed #191970;\r\n    }\r\n    input:not(:focus):not(:placeholder-shown):invalid {\r\n      border: 2px dashed #B22222;\r\n      ${Error} {\r\n        display: block !important;\r\n      }\r\n    }\r\n    input:not(:focus):not(:placeholder-shown):valid {\r\n      border: 2px solid #2E8B57;\r\n    }\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n    display: inline-block;\r\n    border: none;\r\n    outline: none;\r\n    font-size: 0.7rem; \r\n    overflow: visible;\r\n    flex: 1;\r\n`\r\nconst StyledUser = styled(User)`\r\n    width: 1rem;\r\n    display: inline;\r\n`\r\nconst StyledLock = styled(LockAlt)`\r\n    width: 1rem;\r\n    display: inline;\r\n`\r\n\r\nconst StyledLogin = styled.div`\r\n    margin-top: 2rem;\r\n    width: 100%;\r\n`\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  \r\n  const isPending = useSelector((state) => state.user.status);\r\n  const isAuthenticated = useSelector((state) => state.user.auth);\r\n  const httpErr = useSelector((state) => state.user.httpErr);\r\n  const [username, setUsername] = useState('');\r\n  const [usernameValidity, setUsernameValidity] = useState();\r\n  const [password, setPassword] = useState('');\r\n  const [passwordValidity, setPasswordValidity] = useState();\r\n  \r\n  useEffect(()=>{\r\n    let isAuth = localStorage.getItem('isAuth');\r\n    if(isAuth){\r\n        dispatch(setAuth(isAuth));\r\n        }\r\n    },[])\r\n\r\n  const handleLogin = (e) => {\r\n      e.preventDefault();\r\n        // dispatch(fetchAsync({'email':username, 'password': password})).then(()=>{\r\n        //     if(isAuthenticated){\r\n        //         history.push('/home');\r\n        //     }\r\n        // });\r\n        localStorage.setItem('isAuth', true);\r\n        history.push('/todo-list');\r\n  }\r\n\r\n  const checkValidity = (type) => {\r\n    switch(type){\r\n      case 'username':\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        username && !re.test(String(username).toLowerCase())? setUsernameValidity(false): setUsernameValidity(true);\r\n        break;\r\n      case 'password':\r\n        (password && (password.length<4 || password.length>16))? setPasswordValidity(false): setPasswordValidity(true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return(\r\n    <LoginContainer>\r\n        \r\n      <Title>To-do List</Title>\r\n      <form onSubmit={handleLogin}>\r\n\r\n      <Label>Email</Label>\r\n        <InputContainer>\r\n            <StyledUser/>\r\n            <StyledInput type='email' placeholder='any _@_.com! PoC for Auth' value={username} onChange={e => setUsername(e.target.value)} onBlur={(e)=>checkValidity('username')}required pattern=\".{1,50}\" />\r\n        </InputContainer>\r\n\r\n          <Error>{usernameValidity === false? 'Not a valid email' : null}</Error>\r\n\r\n        <Label>Password</Label>\r\n        <InputContainer>\r\n        <StyledLock/>\r\n        <StyledInput placeholder='Must be at least 4 characters' value={password} onChange={e => setPassword(e.target.value)} onBlur={(e)=>checkValidity('password')} required pattern=\".{4,16}\"  title=\"Password must be 4-16 characters.\"/>\r\n        </InputContainer>\r\n        <Error>{passwordValidity === false? 'Password must be 4-16 characters' : null}</Error>\r\n        <StyledLogin>\r\n          <StyledButton color=\"#191970\" type=\"submit\" disabled={(!passwordValidity && !usernameValidity) || isPending === 'loading'}>{isPending==='loading'? '...' : 'login'}</StyledButton>\r\n        </StyledLogin>\r\n        <Error>{httpErr? `Error ${httpErr}` : null}</Error>\r\n        </form>\r\n    </LoginContainer>\r\n  )\r\n}\r\n\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nfunction ProtectedRoute({ isAuth, component: Component, ...rest}){\r\n    return <Route {...rest} render={(props)=>{\r\n                if(isAuth){\r\n                    return <Component />;\r\n                } else {\r\n                    return <Redirect to={{pathname: '/todo-list/login', state:{from: props.location}}}/>;\r\n                }\r\n    }}/>;\r\n}\r\n\r\nexport default ProtectedRoute;","import React from 'react';\r\nimport { BrowserRouter, Route, Redirect} from 'react-router-dom';\r\nimport App from './App'\r\nimport Login from './features/login/Login'\r\nimport { useSelector} from 'react-redux';\r\n\r\nimport ProtectedRoute from './features/routing/ProtectedRoute';\r\n\r\nconst AppRouter = () => {\r\n  const isAuthenticated = useSelector((state) => state.user.auth);\r\n\r\n    return(\r\n        <BrowserRouter>\r\n            <Route path='/todo-list/login'><Login/></Route> \r\n            <ProtectedRoute path='/todo-list' component={App} isAuth={isAuthenticated}/>\r\n\r\n            {isAuthenticated ?(<Redirect to='/todo-list'/>): (<Redirect to='/todo-list/login'/>)}\r\n            \r\n        </BrowserRouter>\r\n      \r\n)};\r\n\r\nexport default AppRouter; ","import { configureStore } from '@reduxjs/toolkit';\r\nimport tableReducer from '../features/table/tableSlice';\r\nimport userReducer from '../features/user/userSlice';\r\nexport const store = configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n    table: tableReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport AppRouter from './AppRouter';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n        <AppRouter />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}